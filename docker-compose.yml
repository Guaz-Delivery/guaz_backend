services:
  postgres:
    image: postgres:17-bookworm
    container_name: guaz_db
    restart: always
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_USER: ${PG_USER}
      PGDATA: ${PG_DATA}
    networks:
      - guaz_delivery_network

  graphql-engine:
    image: hasura/graphql-engine:v2.42.0
    container_name: guaz_graphql_engine
    ports:
      - "8080:8080"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${PG_USER}:${PG_PASS}@postgres:5432/${PG_DB}
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://${PG_USER}:${PG_PASS}@postgres:5432/${PG_DB}
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
    networks:
      - guaz_delivery_network

  golang-webhooks:
    container_name: golang_webhooks
    ports:
      - "9999:9999"
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - guaz_delivery_network
volumes:
  db_data:

networks:
  guaz_delivery_network:
